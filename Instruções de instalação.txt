1 - Baixe a pasta do projeto pelo GitHub ou clone o projeto com o git clone. A versão mais atualizada está disponível na branch main;

2 - Rode o RabbitMQ, com o docker ou instalado na sua máquina. Tenha atenção ao enderenço do RabbitMQ. Usando o docker, com o comando citado acima, acessamos o RabbitMQ com o seguinte enderenço: http://localhost:15672/. Geralmente o Username é: guest e o password também é: guest;

3 - Caso você for usar a mesma máquina para executar os 7 códigos-fonte (1 da matriz e 6 das filiais), não precisa realizar nenhuma alteração HOST(IP), pois usamos "localhost" no código e o python geralmente conseguira acessar o RabbitMQ. Mas caso você tenha alguma configuração diferente no seu RabbitMQ, é importante fica atentando ao enderenço e se necessário mudá-lo nos códigos-fonte da matriz e das filiais;

4 - Executando a aplicação na mesma máquina, você precisará abrir 6 terminais na pasta do projeto e execute primeiramente os códigos-fontes das filiais. Você pode usar o comando: 
 4.1 - py lavanderia_filial01.py (Windows) ou python lavanderia_fialial01.py (Windows) ou python3 lavanderia_filial01.py (Ubuntu);

5 - Após as 6 fialias abertas, você verá que será exibido uma texto informando o número da filial e que ela está aguardando mensagens da matriz;

6 - Abra outro terminal e execute a matriz. 
  6.1 - Ex.: py lavanderia_matriz.py (Windows), python lavanderia_matriz.py (Windows), python3 lavanderia_matriz.py (Ubuntu);

7 - A matriz enviará 5 mensagens uma de cada vez para cada filial e depois o cliente da matriz será finalizado;

8 - Você notará que nos terminais das filiais, será exibida as mensagens enviada pela matriz;

9 - Caso você queirá enviar mais cinco mensagens, é só iniciar a matriz novamente e enviar mais mensagens.
